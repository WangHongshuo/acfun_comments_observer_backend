package main

import (
	"bytes"
	"fmt"
)

// Generated by https://quicktype.io

type ArticlesList struct {
	Result   int64     `json:"result"`
	Cursor   string    `json:"cursor"`
	HostName string    `json:"host-name"`
	Articles []Article `json:"data"`
}

type Article struct {
	CommentCount int64  `json:"commentCount"`
	ArticleID    int64  `json:"articleId"`
	RealmID      int64  `json:"realmId"`
	Title        string `json:"title"`
	UserID       int64  `json:"userId"`
	CreateTime   int64  `json:"createTime"`
	Description  string `json:"description"`
	UserName     string `json:"userName"`
	IsOriginal   bool   `json:"isOriginal"`
}

func (a ArticlesList) String() string {
	var buff bytes.Buffer
	for i := range a.Articles {
		buff.WriteString("----------\n")
		buff.WriteString(a.Articles[i].String())
	}
	return buff.String()
}

func (a Article) String() string {
	var buff bytes.Buffer
	buff.WriteString(fmt.Sprintf("ArticleID: %v\n", a.ArticleID))
	buff.WriteString(fmt.Sprintf("Title: %v\n", a.Title))
	buff.WriteString(fmt.Sprintf("CommentCount: %v\n", a.CommentCount))
	buff.WriteString(fmt.Sprintf("UserID: %v\n", a.UserID))
	buff.WriteString(fmt.Sprintf("UserName: %v\n", a.UserName))
	buff.WriteString(fmt.Sprintf("RealmID: %v\n", a.RealmID))
	return buff.String()
}
